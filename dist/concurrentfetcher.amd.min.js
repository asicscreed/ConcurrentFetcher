'use strict';define(["exports"],function(p){class q extends Error{constructor(a,b,m){super(a);this.name="FetchError";this.url=b;this.status=m}}class r extends Error{constructor(a,b){super(a);this.name="JsonParseError";this.url=b}}class t{constructor(){this.controllers=new Map}createSignal(a){const b=new AbortController;this.controllers.set(a,b);return b.signal}abort(a){const b=this.controllers.get(a);b&&(b.abort(),this.controllers.delete(a))}abortAll(){this.controllers.forEach(a=>a.abort());this.controllers.clear()}}
class v{constructor(a){this.requests=a;this.errors=[];this.abortManager=new t}delay(a){return new Promise(b=>setTimeout(b,a))}async fetchWithRetry(a,b,m,n,e,g=0){try{const f="undefined"!==typeof Request&&a instanceof Request?a.clone():a,c=await fetch(f,b);if(!c.ok)throw new q(`Fetch HTTP error! status: ${c.status}`,a,c.status);let h;const d=c.headers.get("content-type");d&&d.includes("application/json")?h=await c.json():d&&d.includes("text/html")?h=await c.text():d&&d.includes("text/plain")?h=await c.text():
(d&&d.includes("image/")||d&&d.includes("application/octet-stream"),h=await c.blob());return h}catch(f){if(0<n)return n--,g++,await this.delay(e),this.fetchWithRetry(a,b,m,n,e,g);throw f;}}async concurrentFetch({progressCallback:a}={}){const b=[];let m=0;const n=this.requests.map((e,g)=>{const {url:f,fetchOptions:c={},callback:h=null,requestId:d=null,maxRetries:w=0,retryDelay:x=1E3,abortTimeout:u=0}=e,l=null!==d&&void 0!==d?d:g.toString();e=0<u?AbortSignal.any([this.abortManager.createSignal(l),AbortSignal.timeout(u)]):
this.abortManager.createSignal(l);return this.fetchWithRetry(f,{...c,signal:e},l,w,x).then(k=>{h?h(l,k,null,this.abortManager):b[g]=k}).catch(k=>{k instanceof SyntaxError&&(k=new r(k.message,f));h?h(l,null,k,this.abortManager):(this.errors.push({uniqueId:l,url:f,error:k}),b[g]=null)}).finally(()=>{m++;a&&a(l,m,this.requests.length)})});try{return await Promise.all(n),{results:b?b.filter(e=>null!==e):[],errors:this.errors}}catch(e){return this.errors.push({uniqueId:"unknown",url:"unknown",error:e}),
this.requests.forEach(g=>{var f,c;return null===(f=g.callback)||void 0===f?void 0:f.call(g,null!==(c=g.requestId)&&void 0!==c?c:"unknown",null,e,this.abortManager)}),{results:[],errors:this.errors}}}abort(a){this.abortManager.abort(a)}abortAll(){this.abortManager.abortAll()}}p.AbortManager=t;p.ConcurrentFetcher=v;p.FetchError=q;p.JsonParseError=r});
