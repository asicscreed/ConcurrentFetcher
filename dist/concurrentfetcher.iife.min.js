'use strict';var ConcurrentFetcher=function(v){class y extends Error{constructor(a,b,l){super(a);this.name="FetchError";this.url=b;this.status=l}}class z extends SyntaxError{constructor(a,b){super(a);this.name="JsonParseError";this.url=b}}class A{constructor(){this.controllers=new Map}createSignal(a){const b=new AbortController;this.controllers.set(a,b);return b.signal}abort(a){const b=this.controllers.get(a);b&&(b.abort(),this.controllers.delete(a))}abortAll(){this.controllers.forEach(a=>a.abort());
this.controllers.clear()}}class C{constructor(a){this.requests=a;this.errors=[];this.abortManager=new A}delay(a){return new Promise(b=>setTimeout(b,a))}async fetchWithRetry(a,b,l,r,e,g,h,k,m,n=0){let w=200;try{var t="undefined"!==typeof Request&&a instanceof Request?a.clone():a,c=await fetch(t,b);w=c.status;if(!c.ok)throw new y("Fetch HTTP error! status: "+c.status,a,c.status);let p="",u=0;c.headers&&c.headers.forEach((f,d)=>{"content-type"==d.toLowerCase()?p=f.toLowerCase():"content-length"==d.toLowerCase()&&
(u=parseInt(f))});let q;if(p.includes("application/json"))q=r?JSON.stringify(await c.json()):await c.json();else if(p.includes("text/"))q=await c.text();else if(0<k&&u>k&&!c.bodyUsed&&c.body){const f=c.body.getReader();t=[];c=0;try{for(;;){const {done:x,value:B}=await f.read();if(x)break;t.push(B);c+=B.length;m&&m(0,0,c,u)}const d=new Uint8Array(c);c=0;for(const x of t)d.set(x,c),c+=x.length;q=d}finally{f.releaseLock()}}else q=await c.blob();return q}catch(p){if(this.shouldRetryRequest(w,e,g,n))return n++,
await this.delay(h),this.fetchWithRetry(a,b,l,r,e,g,h,k,m,n);throw p;}}async concurrentFetch({progressCallback:a}={}){const b=[];let l=0;const r=this.requests.map((e,g)=>{const {url:h,fetchOptions:k={},callback:m=null,requestId:n=null,forceText:w=!1,maxRetries:t=0,statusCodesToRetry:c=[[-99],[0],[-99]],retryDelay:p=1E3,abortTimeout:u=0,cutoffAmount:q=0}=e,f=null!==n&&void 0!==n?n:g.toString();e={method:"GET",headers:{Accept:"application/json","Content-Type":"application/json; charset: UTF-8"},signal:0<
u?AbortSignal.any([this.abortManager.createSignal(f),AbortSignal.timeout(u)]):this.abortManager.createSignal(f),...k};return this.fetchWithRetry(h,e,f,w,t,c,p,q,a).then(d=>{m?m(f,d,null,this.abortManager):b[g]=d}).catch(d=>{if(d instanceof SyntaxError||d.name&&"SyntaxError"===d.name)d=new z(d.message,h);m?m(f,null,d,this.abortManager):(this.errors.push({uniqueId:f,url:h,error:d}),b[g]=null)}).finally(()=>{l++;a&&a(f,l,this.requests.length,0,0)})});try{return await Promise.all(r),{results:b?b.filter(e=>
null!==e):[],errors:this.errors}}catch(e){return this.errors.push({uniqueId:"unknown",url:"unknown",error:e}),this.requests.forEach(g=>{var h,k;return null===(h=g.callback)||void 0===h?void 0:h.call(g,null!==(k=g.requestId)&&void 0!==k?k:"unknown",null,e,this.abortManager)}),{results:[],errors:this.errors}}}shouldRetryRequest(a,b,l,r){if(1>b-r)return!1;b=!1;for(const [e,g]of l)if(a>=e&&a<=g){b=!0;break}return b}abort(a){this.abortManager.abort(a)}abortAll(){this.abortManager.abortAll()}}v.AbortManager=
A;v.ConcurrentFetcher=C;v.FetchError=y;v.JsonParseError=z;return v}({});
